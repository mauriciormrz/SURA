 buildscript {
     repositories {
         mavenCentral()
         maven {
             url "https://plugins.gradle.org/m2/"
         }
     }
     dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:1.9.4"
         classpath "gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.6"
         classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
     }
 }
 
 apply plugin: 'java'
 apply plugin: 'idea'
 apply plugin: 'application'
 apply plugin: 'net.serenity-bdd.aggregator'
 apply plugin: 'org.sonarqube'
 apply plugin: 'com.github.sherter.google-java-format'
 
 configurations {
     unitTestCompile.extendsFrom testCompile
     unitTestRuntime.extendsFrom testRuntime
 }
 
 repositories {
     jcenter()
     mavenCentral()
 }
 
 dependencies {
    compile         group: 'org.assertj',       name: 'assertj-core',                  	version: '1.7.0'
    compile         group: 'org.slf4j',         name: 'slf4j-api',                     	version: '1.7.2'
    compile         group: 'org.slf4j',         name: 'slf4j-log4j12',                 	version: '1.7.2'   
    compile 		group: 'com.google.googlejavaformat', name: 'google-java-format', 	version: '1.7'
    
    compile 'net.serenity-bdd:serenity-core:1.9.9'
    compile 'net.serenity-bdd:serenity-junit:1.9.9'
    compile 'net.serenity-bdd:serenity-cucumber:1.9.5'  
    
    testCompile     group: 'junit',             name: 'junit',               			version: '4.12'
    testCompile     group: 'org.hamcrest',      name: 'hamcrest-all',        			version: '1.3'
    
    
    testCompile 'net.serenity-bdd:serenity-core:1.9.9'                  
    testCompile 'net.serenity-bdd:serenity-junit:1.1.1'                
    testCompile('junit:junit:4.12')
    testCompile('org.assertj:assertj-core:1.7.0')
    testCompile('org.slf4j:slf4j-simple:1.7.7')
 }

 
 sonarqube {
     properties {
         property "sonar.projectKey", "BDDCoreSuraEmpresariales"
         property "sonar.projectName", "BDDCoreSuraEmpresariales"
         property "sonar.projectVersion", "1.0"
         property "sonar.sources", "src/main"
         property "sonar.java.binaries", "build"
         property "sonar.test", "src/test"
     }
 }
 
 test {
     maxParallelForks = Runtime.runtime.availableProcessors()
 }
 
 task wrapper(type: Wrapper) {
     gradleVersion = '4.6'
 }
 
 //compileJava.dependsOn 'googleJavaFormat'
 compileJava.mustRunAfter 'sonarqube'
 gradle.startParameter.continueOnFailure = true
 
 
tasks.withType(Test) {
    systemProperties = System.properties
}